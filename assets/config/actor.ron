(
    players: {
        "pink": Actor(
            name: "Linus",

            texture: "image/actor/pink.png",
            texture_atlas_grid: TextureAtlasGrid(
                tile_size: UVec2(9, 8),
                columns: 2,
                rows: 1,
            ),
            sprite_animation: SpriteAnimation(
                frames: [
                    SpriteAnimationFrame(index: 0, beats: 8),
                    SpriteAnimationFrame(index: 1, beats: 8),
                ],
            ),

            movement: Movement(speed: 80.0),
            attack: Attack(color: Srgba(Srgba(red: 0.855, green: 0.576, blue: 0.800, alpha: 1.000))),
            health: Health(max: 100, current: 100),
            deck: Deck(cards: ["step", "pair"]),
        ),
    },

    enemies: {
        "red": Actor(
            name: "Lucy",

            texture: "image/actor/red.png",
            texture_atlas_grid: TextureAtlasGrid(
                tile_size: UVec2(8, 8),
                columns: 2,
                rows: 1,
            ),
            sprite_animation: SpriteAnimation(
                frames: [
                    SpriteAnimationFrame(index: 0, beats: 8),
                    SpriteAnimationFrame(index: 1, beats: 8),
                ],
            ),

            attack: Attack(color: Srgba(Srgba(red: 0.929, green: 0.557, blue: 0.576, alpha: 1.000))),
            deck: Deck(cards: ["step", "step", "pair"]),
        ),

        // TODO: If character select screen is implemented, uncomment this and include logic to
        //       avoid spawning enemies that look like the player (aka same key).
        /*"pink": Actor(
            name: "Linus",

            texture: "image/actor/pink.png",
            texture_atlas_grid: TextureAtlasGrid(
                tile_size: UVec2(9, 8),
                columns: 2,
                rows: 1,
            ),
            sprite_animation: SpriteAnimation(
                frames: [
                    SpriteAnimationFrame(index: 0, beats: 8),
                    SpriteAnimationFrame(index: 1, beats: 8),
                ],
            ),

            attack: Attack(color: Srgba(Srgba(red: 0.855, green: 0.576, blue: 0.800, alpha: 1.000))),
            deck: Deck(cards: ["step", "pair", "pair"]),
        ),*/

        "green": Actor(
            name: "Jade",

            texture: "image/actor/green.png",
            texture_atlas_grid: TextureAtlasGrid(
                tile_size: UVec2(8, 8),
                columns: 2,
                rows: 1,
            ),
            sprite_animation: SpriteAnimation(
                frames: [
                    SpriteAnimationFrame(index: 0, beats: 8),
                    SpriteAnimationFrame(index: 1, beats: 8),
                ],
            ),

            attack: Attack(color: Srgba(Srgba(red: 0.557, green: 0.722, blue: 0.518, alpha: 1.000))),
            deck: Deck(cards: ["pair"]),
        ),

        "blue": Actor(
            name: "Aqua",

            texture: "image/actor/blue.png",
            texture_atlas_grid: TextureAtlasGrid(
                tile_size: UVec2(8, 8),
                columns: 2,
                rows: 1,
            ),
            sprite_animation: SpriteAnimation(
                frames: [
                    SpriteAnimationFrame(index: 0, beats: 8),
                    SpriteAnimationFrame(index: 1, beats: 8),
                ],
            ),

            attack: Attack(color: Srgba(Srgba(red: 0.424, green: 0.694, blue: 0.725, alpha: 1.000))),
            deck: Deck(cards: ["step", "pair"]),
        ),

        "purple": Actor(
            name: "Lily",

            texture: "image/actor/purple.png",
            texture_atlas_grid: TextureAtlasGrid(
                tile_size: UVec2(8, 8),
                columns: 2,
                rows: 1,
            ),
            sprite_animation: SpriteAnimation(
                frames: [
                    SpriteAnimationFrame(index: 0, beats: 8),
                    SpriteAnimationFrame(index: 1, beats: 8),
                ],
            ),

            attack: Attack(color: Srgba(Srgba(red: 0.694, green: 0.529, blue: 0.788, alpha: 1.000))),
            deck: Deck(cards: ["step"]),
        ),
    },
)
